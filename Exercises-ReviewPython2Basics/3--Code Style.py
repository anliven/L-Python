# -*- coding: utf-8 -*-
__author__ = 'Anliven'

# 编程就是解决问题的过程，这就意味着要尝试各种可能性，进行实验，经历失败，然后丢掉做出来的东西重头开始。


# 函数的风格
#
# 程序员将 class (类)里边的函数称作 method （方法）
# 给函数命名的时候，与其命名成一个名词，不如命名为一个动词，作为给 class 的一个命令。
# 让函数保持简单小巧。


# 类的风格
#
# class 应该使用 “camel case（驼峰式大小写）”，例如：SuperGoldFactory
#  __init__ 不应该做太多的事情，这会让 class 变得难以使用。
# 其它函数应该使用 “underscore format（下划线隔词）”，例如：my_awesome_hair
# 用一致的方式组织函数的参数。
# 不要对全局变量或者来自模组的变量进行重定义或者赋值，
# 不要一根筋式地维持风格一致性，
# 永远永远都使用 class Name(object) 的方式定义 class，否则会碰到大麻烦。


# 代码风格
#
# 为了以方便他人阅读，为自己的代码字符之间留下一些空白
# 学着模仿别人的风格写 Python 程序，最终形成自己的代码风格。
# 一旦有了自己的风格，也别把它太当回事。编码的目的是解决问题，而不是显露风格


# 好的注释
#
# 无论怎样，都应好好写你的注解。
# 写注解的时候，描述清楚为什么要这样实现。
# 尽量让注解短小精悍一语中的，如果对代码做了更改，记得检查并更新相关的注解，确认它们还是正确的。

