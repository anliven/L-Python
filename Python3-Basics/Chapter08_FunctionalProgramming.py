#! python3
# -*- coding: utf-8 -*-
import math

print(abs(-123))  # 对函数abs进行调用
print(abs)

f = abs  # 变量f指向函数，此时f是一个函数对象
print(f(-123))  # 此时f(-123)与abs(-123)作用相同
print(f)

abs = len  # 变量abs指向len
print(abs([1, 2, 3]))
print(abs)  # 函数名其实就是指向函数的变量


def test(x, y, func):  # 定义一个接受函数作参数的函数
    return func(x) + func(y)


print(test([0, 0, 0], [1, 1, 1], len))  # 两个列表的长度之和
print(test(25, 9, math.sqrt))  # 两个数分别开平方后的和

# ### 函数式编程的特点
# - 将计算视为函数而非指令
# - 纯函数式编程：不需要变量，没有副作用，测试简单
# - 支持高阶函数，代码简洁
#
# ### Python支持的函数式编程
# - 不是纯函数编程：允许有变量
# - 支持高阶函数：函数可以作为变量传入
# - 支持闭包：可以返回函数
# - 有限度地支持匿名函数
#
# ### 高阶函数
# - 变量可以指向函数，函数的参数也可以指向函数
# - 一个函数可以接受另一个函数作为参数，能够接受函数作参数的函数就是高阶函数
